{"version":3,"sources":["js/pythagoras-tree.js"],"names":["Tree","canvas","document","querySelector","Drange","ctx","getContext","lineWidth","strokeStyle","degrBase","degr","set_default","handleRange","length","step_value","baseX","baseY","lineX","lineY","addEventListener","e","which","rangeFunc","Number","target","value","clearRect","width","height","degrees_monitor","textContent","makeTree","beginPath","moveTo","lineTo","createBranch","stroke","closePath","stepValue","sideBool","direction","result","count_angle","side","do_1_section_new","do_2_section_new","do_3_section_new","do_4_section_new","radian","Math","PI","sin","cos","yLength","xLength","Tree_ex"],"mappings":"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","file":"pythagoras-tree.97ff6693.js","sourceRoot":"..\\src","sourcesContent":["class Tree {\r\n\r\n\tconstructor() {\r\n\t\t\tthis.canvas = document.querySelector('#ctx')\r\n\t\t\tthis.Drange = document.querySelector('#set_degr')\r\n\t\t\tthis.ctx = this.canvas.getContext('2d')\r\n\t\t\tthis.ctx.lineWidth = 1         // толщина линии\r\n\t\t\tthis.ctx.strokeStyle = 'white' // цвет    линии\r\n\t\t\t\r\n\t\t\tthis.degrBase = 45\r\n\t\t\tthis.degr = this.degrBase\r\n\r\n\t\t\tthis.set_default()\r\n\t\t\tthis.handleRange()\r\n\t}\r\n\r\n\tset_default() {\r\n\t\t\tthis.length = 160 // первоначальная длинна лнии\r\n\t\t\tthis.step_value = 10 // кол-во шагов (рисования)\r\n\t\t\t\r\n\t\t\tthis.baseX = 600 // дефолтная ширина\r\n\t\t\tthis.baseY = 720 // дефолтная высота (в самом низу)\r\n\t\t\t\r\n\t\t\t// координаты столба дерева\r\n\t\t\tthis.lineX = 600\r\n\t\t\tthis.lineY = 500\r\n\t}\r\n\r\n\thandleRange() {\r\n\t\t\tthis.Drange.addEventListener('mousemove', (e)=>{\r\n\t\t\t\t\tif(e.which == 1) {\r\n\t\t\t\t\t\t\tthis.rangeFunc(Number(e.target.value))\r\n\t\t\t\t\t}\r\n\t\t\t}, false)\r\n\r\n\t\t\tthis.Drange.addEventListener('change', (e)=>{\r\n\t\t\t\t\t\t\tthis.rangeFunc(Number(e.target.value))\r\n\t\t\t}, false)\r\n\t}\r\n\r\n\trangeFunc(value) {\r\n\t\t\tthis.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n\r\n\t\t\tlet degrees_monitor = document.querySelector('.degrees_monitor')\r\n\t\t\t\t\tdegrees_monitor.textContent = value\r\n\r\n\t\t\tthis.degrBase = value\r\n\t\t\tthis.degr = value\r\n\r\n\t\t\tthis.set_default()\r\n\t\t\tthis.makeTree()\r\n\t}\r\n\r\n\tmakeTree() {\r\n\t\t\t// отрисовываем столб дерева\r\n\t\t\tthis.ctx.beginPath()                     // clear field\r\n\t\t\tthis.ctx.moveTo(this.baseX, this.baseY); // передвигаем перо\r\n\t\t\tthis.ctx.lineTo(this.lineX, this.lineY); // рисуем линию\r\n\r\n\t\t\tthis.createBranch(this.step_value, true, this.degr, this.length, this.lineX, this.lineY)\r\n\r\n\t\t\tthis.set_default()\r\n\t\t\tthis.ctx.moveTo(this.lineX, this.lineY); // передвигаем перо\r\n\t\t\tthis.degr = this.degrBase\r\n\r\n\t\t\tthis.createBranch(this.step_value, false, this.degr, this.length, this.lineX, this.lineY)\r\n\r\n\t\t\tthis.ctx.stroke()\r\n\t\t\tthis.ctx.closePath()\r\n\t}\r\n\r\n\tcreateBranch(stepValue = 10, sideBool = true, degr = 45, length, lineX, lineY) {\r\n\t\t\tlet direction = sideBool ? 'right' : 'left'\r\n\r\n\t\t\tif(stepValue > 0) {\r\n\t\t\t\t\t// processing\r\n\t\t\t\t\tlet result = this.count_angle(degr, length, lineX, lineY, direction)\r\n\t\t\t\t\tthis.ctx.moveTo(lineX, lineY)\r\n\t\t\t\t\tthis.ctx.lineTo(result.lineX, result.lineY)\r\n\r\n\t\t\t\t\tlength = length / 1.6\r\n\t\r\n\t\t\t\t\tstepValue--\r\n\t\t\t\t\tthis.createBranch(stepValue, sideBool, (degr - Number(this.degrBase)), length, result.lineX, result.lineY)\r\n\t\t\t\t\tthis.createBranch(stepValue, sideBool, (degr + Number(this.degrBase)), length, result.lineX, result.lineY)\r\n\t\t\t}\r\n\t}\r\n\r\n\tcount_angle(degr, length, lineX, lineY, side) {\r\n\t\t\tdegr = Number(degr)\r\n\r\n\t\t\tif(degr <= 0) degr = 360 + degr\r\n\r\n\t\t\tif(degr > 0 && degr < 90) {\r\n\t\t\t\t\tlet result = this.do_1_section_new(lineX, lineY, length, degr, side)\r\n\t\t\t\t\tlineX = result.lineX\r\n\t\t\t\t\tlineY = result.lineY\r\n\t\t\t}\r\n\t\t\tif(degr > 90 && degr < 180) {\r\n\t\t\t\t\tlet result = this.do_2_section_new(lineX, lineY, length, degr, side)\r\n\t\t\t\t\tlineX = result.lineX\r\n\t\t\t\t\tlineY = result.lineY\r\n\t\t\t}\r\n\t\t\tif(degr > 180 && degr < 270) {\r\n\t\t\t\t\tlet result = this.do_3_section_new(lineX, lineY, length, degr, side)\r\n\t\t\t\t\tlineX = result.lineX\r\n\t\t\t\t\tlineY = result.lineY\r\n\t\t\t}\r\n\t\t\tif(degr > 270 && degr < 360) {\r\n\t\t\t\t\tlet result = this.do_4_section_new(lineX, lineY, length, degr, side)\r\n\t\t\t\t\tlineX = result.lineX\r\n\t\t\t\t\tlineY = result.lineY\r\n\t\t\t}\r\n\r\n\t\t\t/////////\r\n\t\t\tif(degr == 90)  lineY -= length\r\n\r\n\t\t\tif(degr == 180) {\r\n\t\t\t\t\tif(side == \"right\") {\r\n\t\t\t\t\t\t\tlineX -= length\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(side == \"left\") {\r\n\t\t\t\t\t\t\tlineX += length\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(degr == 270) lineY += length\r\n\r\n\t\t\tif(degr == 360) {\r\n\t\t\t\t\tif(side == \"right\") {\r\n\t\t\t\t\t\t\tlineX += length\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(side == \"left\") {\r\n\t\t\t\t\t\t\tlineX -= length\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t\t\"lineY\": lineY,\r\n\t\t\t\t\t\"lineX\": lineX\r\n\t\t\t}\r\n\t}\r\n\r\n\t///////\r\n\tdo_1_section_new(lineX, lineY, length, degr, side) {\r\n\t\t\tlet radian = degr * Math.PI / 180\r\n\t\r\n\t\t\t// if turn right\r\n\t\t\tlet sin = Math.sin(radian)\r\n\t\t\tlet cos = Math.cos(radian)\r\n\t\t\tlet yLength = length * sin\r\n\t\t\tlet xLength = length * cos\r\n\t\t\t\r\n\t\t\tif(side == \"right\") {\r\n\t\t\t\t\tlineX += xLength\r\n\t\t\t\t\tlineY -= yLength\r\n\t\t\t}\r\n\t\t\tif(side == \"left\") {\r\n\t\t\t\t\tlineX -= xLength\r\n\t\t\t\t\tlineY -= yLength\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t\t\"lineY\": lineY,\r\n\t\t\t\t\t\"lineX\": lineX\r\n\t\t\t}\r\n\t}\r\n\r\n\tdo_2_section_new(lineX, lineY, length, degr, side) {\r\n\t\t\tdegr = degr - 90\r\n\t\t\tlet radian = degr * Math.PI / 180\r\n\t\r\n\t\t\t// if turn right\r\n\t\t\tlet sin = Math.sin(radian)\r\n\t\t\tlet cos = Math.cos(radian)\r\n\t\t\tlet xLength = length * sin\r\n\t\t\tlet yLength = length * cos\r\n\t\t\t\r\n\t\t\tif(side == \"right\") {\r\n\t\t\t\t\tlineX -= xLength\r\n\t\t\t\t\tlineY -= yLength\r\n\t\t\t}\r\n\t\t\tif(side== \"left\") {\r\n\t\t\t\t\tlineX += xLength\r\n\t\t\t\t\tlineY -= yLength\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t\t\"lineY\": lineY,\r\n\t\t\t\t\t\"lineX\": lineX\r\n\t\t\t}\r\n\t}\r\n\r\n\tdo_3_section_new(lineX, lineY, length, degr, side) {\r\n\t\t\tdegr = degr - 180\r\n\t\t\tlet radian = degr * Math.PI / 180\r\n\t\r\n\t\t\t// if turn right\r\n\t\t\tlet sin = Math.sin(radian)\r\n\t\t\tlet cos = Math.cos(radian)\r\n\t\t\tlet xLength = length * sin\r\n\t\t\tlet yLength = length * cos\r\n\t\t\t\r\n\t\t\tif(side == \"right\") {\r\n\t\t\t\t\tlineX -= xLength\r\n\t\t\t\t\tlineY += yLength\r\n\t\t\t}\r\n\t\t\tif(side == \"left\") {\r\n\t\t\t\t\tlineX += xLength\r\n\t\t\t\t\tlineY += yLength\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t\t\"lineY\": lineY,\r\n\t\t\t\t\t\"lineX\": lineX\r\n\t\t\t}\r\n\t}\r\n\r\n\tdo_4_section_new(lineX, lineY, length, degr, side) {\r\n\t\t\tdegr = degr - 270\r\n\t\t\tlet radian = degr * Math.PI / 180\r\n\t\r\n\t\t\t// if turn right\r\n\t\t\tlet sin = Math.sin(radian)\r\n\t\t\tlet cos = Math.cos(radian)\r\n\t\t\tlet xLength = length * sin\r\n\t\t\tlet yLength = length * cos\r\n\t\t\t\r\n\t\t\tif(side == \"right\") {\r\n\t\t\t\t\tlineX += xLength\r\n\t\t\t\t\tlineY += yLength\r\n\t\t\t}\r\n\t\t\tif(side == \"left\") {\r\n\t\t\t\t\tlineX -= xLength\r\n\t\t\t\t\tlineY += yLength\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\t\t\"lineY\": lineY,\r\n\t\t\t\t\t\"lineX\": lineX\r\n\t\t\t}\r\n\t}\r\n\r\n}\r\n\r\nconst Tree_ex = new Tree()\r\n\t\tTree_ex.makeTree()"]}